{"version":3,"sources":["constants.js","app/use-id.js","app/use-task-list.js","task-list/use-filter.js","task-list/helpers.js","menu-item/index.js","task-list/index.js","app/use-is-open.js","task-form/index.js","modal/use-task.js","modal/index.js","app/index.js","index.js"],"names":["LocalStorageKey","SessionStorageKey","useId","localId","Number","localStorage","getItem","useState","id","setId","nextId","idOld","idNew","setItem","String","useTaskList","localTaskList","JSON","parse","taskList","setTaskList","handleTaskAdd","task","taskListOld","taskWithId","taskListNew","stringify","handleTaskListChange","handleTaskRemove","useFilter","sessionFilterKeys","sessionStorage","sessionFilterOrder","filterKey","setFilterKey","filterOrder","setFilterOrder","filterIds","useMemo","Object","keys","length","list","key","order","values","sort","itemA","itemB","map","a","b","sortArrayBoolean","handleKeyChange","useCallback","orderOld","orderNew","MenuItem","title","keyValue","onSelect","activeKey","className","onClick","TaskList","onEdit","onRemove","onTaskListChange","handleIsCompletedChange","taskNew","isCompleted","activeOrder","item","type","checked","useIsOpen","localIsOpen","isOpen","setIsOpen","handleIsOpenSet","value","TaskForm","onChange","onSubmit","onCancel","event","target","useTask","taskInit","sessionTask","setTask","useEffect","handleTaskChange","taskOld","console","log","handleClearTask","removeItem","Modal","onCreate","onClose","taskEdit","handleTaskSubmit","handleCancel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44a15059.chunk.js","sourcesContent":["export const LocalStorageKey = {\n    taskList: 'task-list',\n    taskId: 'task-id',\n}\n\nexport const SessionStorageKey = {\n    filterKey: 'filter-key',\n    filterOrder: 'filter-order',\n    task: 'task',\n    isOpen: 'is-open'\n}","import {useState} from 'react';\n\nimport {LocalStorageKey} from '../constants';\n\nconst useId = () => {\n    const localId = Number(localStorage.getItem(LocalStorageKey.taskId));\n    const [id, setId] = useState(localId || 0);\n\n    const nextId = () => setId((idOld) => {\n        const idNew = idOld + 1;\n\n        localStorage.setItem(LocalStorageKey.taskId, String(idNew));\n\n        return idNew;\n    });\n\n\n    return {id, nextId};\n}\n\nexport default useId;","import {useState} from 'react';\n\nimport {LocalStorageKey} from '../constants';\nimport useId from './use-id';\n\nconst useTaskList = () => {\n    const localTaskList = JSON.parse(localStorage.getItem(LocalStorageKey.taskList));\n\n    const [taskList, setTaskList] = useState(localTaskList || {});\n    const {id, nextId} = useId();\n\n    const handleTaskAdd = (task) => {\n        nextId();\n        setTaskList((taskListOld) => {\n            const taskWithId = {...task, id};\n            const taskListNew = {...taskListOld, [id]: taskWithId}\n\n            localStorage.setItem(LocalStorageKey.taskList, JSON.stringify(taskListNew));\n\n            return taskListNew;\n        });\n    }\n\n    const handleTaskListChange = (task) => {\n        setTaskList((taskListOld) => {\n            const taskListNew = {...taskListOld, [task?.id]: task}\n\n            localStorage.setItem(LocalStorageKey.taskList, JSON.stringify(taskListNew));\n\n            return taskListNew;\n        });\n    }\n\n    const handleTaskRemove = (task) => {\n        setTaskList((taskListOld) => {\n            const taskListNew = {...taskListOld};\n            delete taskListNew[task.id];\n\n            localStorage.setItem(LocalStorageKey.taskList, JSON.stringify(taskListNew));\n\n            return taskListNew;\n        });\n    }\n\n    return {taskList, handleTaskAdd, handleTaskListChange, handleTaskRemove};\n}\n\nexport default useTaskList;\n","import {useMemo, useState, useCallback} from 'react';\n\nimport {SessionStorageKey} from '../constants';\nimport {sortArray, sortArrayBoolean} from \"./helpers\";\n\nconst useFilter = ({taskList}) => {\n    const sessionFilterKeys = sessionStorage.getItem(SessionStorageKey.filterKey);\n    const sessionFilterOrder = sessionStorage.getItem(SessionStorageKey.filterOrder);\n\n    const [filterKey, setFilterKey] = useState(sessionFilterKeys);\n    const [filterOrder, setFilterOrder] = useState(sessionFilterOrder || 'asc');\n\n    const filterIds = useMemo(() => {\n        if (!(taskList && Object.keys(taskList).length > 0)) {\n            return [];\n        }\n\n        switch (filterKey) {\n            case 'id':\n            case 'title':\n                return sortArray(taskList, filterKey, filterOrder);\n            case 'isCompleted':\n                return sortArrayBoolean(taskList, filterKey, filterOrder);\n            default:\n                return Object.keys(taskList);\n        }\n    }, [taskList, filterKey, filterOrder]);\n\n    const handleKeyChange = useCallback((key) => {\n        if (!(typeof key === 'string' || typeof key === 'number')) {\n            return;\n        }\n\n        sessionStorage.setItem(SessionStorageKey.filterKey, key);\n\n        if(filterKey === key){\n            setFilterOrder((orderOld) => {\n                const orderNew = orderOld === 'asc' ? 'desc' : 'asc';\n                sessionStorage.setItem(SessionStorageKey.filterOrder, orderNew);\n                return orderNew;\n            })\n        } else {\n            sessionStorage.setItem(SessionStorageKey.filterOrder, 'asc');\n\n            setFilterKey(key);\n            setFilterOrder('asc');\n        }\n        \n    }, [filterKey]);\n\n\n    return {filterKey, handleKeyChange, filterOrder, filterIds};\n}\n\nexport default useFilter;","\nexport const sortArray = (list, key, order) => {\n    const arrayNew = Object.values(list).sort((itemA, itemB) => {\n        if(itemA[key] > itemB[key]){\n            return order === 'asc' ? 1 : -1;\n        }\n\n        if(itemA[key] < itemB[key]){\n            return order === 'asc' ? -1 : 1;\n        }\n\n        return 0;\n    });\n\n    return arrayNew.map(({id}) => id);\n}\n\nexport const sortArrayBoolean = (list, key, order) => {\n    const arrayNew = Object.values(list).sort((itemA, itemB) => {\n        const a = itemA[key] === true ? -1 : 1;\n        const b = itemB[key] === true ? -1 : 1;\n\n        if(a > b){\n            return order === 'asc' ? 1 : -1;\n        }\n\n        if(a < b){\n            return order === 'asc' ? -1 : 1;\n        }\n\n        return 0;\n    });\n\n    return arrayNew.map(({id}) => id);\n}","import './style.css';\n\nconst MenuItem = ({title, keyValue, order, onSelect, activeKey}) => (\n    <div\n        className={`menu-item${keyValue && keyValue === activeKey ? ' menu-item_active' : ''}`}\n        onClick={() => keyValue && onSelect(keyValue)}\n    >\n        <div>\n            {title}\n        </div>\n    </div>\n);\n\nexport default MenuItem;","\nimport {useCallback} from 'react';\n\nimport useFilter from './use-filter';\nimport MenuItem from '../menu-item';\nimport './style.css';\n\nconst TaskList = ({taskList, onEdit, onRemove, onTaskListChange}) => {\n    const {filterKey, handleKeyChange, filterOrder, filterIds} = useFilter({taskList});\n\n    const handleIsCompletedChange = useCallback((task) => {\n        const taskNew = {...task, isCompleted: !task.isCompleted}\n        onTaskListChange(taskNew);\n    }, [onTaskListChange]);\n\n    return (\n        <div className=\"task-list\">\n            <div className=\"task-menu\">\n                <MenuItem\n                    title=\"Completed\"\n                    keyValue=\"isCompleted\"\n                    activeKey={filterKey}\n                    activeOrder={filterOrder}\n                    onSelect={handleKeyChange}\n                />\n                <MenuItem\n                    title=\"Id\"\n                    keyValue=\"id\"\n                    activeKey={filterKey}\n                    activeOrder={filterOrder}\n                    onSelect={handleKeyChange}\n                />\n                <MenuItem\n                    title=\"Title\"\n                    keyValue=\"title\"\n                    activeKey={filterKey}\n                    activeOrder={filterOrder}\n                    onSelect={handleKeyChange}\n                />\n                <MenuItem title=\"Controls\"/>\n            </div>\n            {filterIds.map((key) => {\n                const item = taskList[(key)];\n\n                if (!item) {\n                    return null;\n                }\n                const {title, isCompleted, id} = item;\n                return (\n                    <div className=\"task\" key={id}>\n                        <div className=\"task__item\">\n                            <input \n                                type=\"checkbox\"\n                                checked={isCompleted}\n                                onClick={() => handleIsCompletedChange(item)}/>\n                        </div>\n                        <div className=\"task__item\">\n                            {id}\n                        </div>\n                        <div className=\"task__item\">\n                            {title}\n                        </div>\n                        <div className=\"task__item\">\n                            <button className=\"task__edit\" type=\"button\" onClick={() => onEdit(item)}>\n                                edit\n                            </button>\n                            <button className=\"task__delete\" type=\"button\" onClick={() => onRemove(item)}>\n                                delete\n                            </button>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n};\n\nexport default TaskList;","import {useState} from 'react';\n\nimport {SessionStorageKey} from '../constants';\n\nconst useIsOpen = () => {\n    const localIsOpen = sessionStorage.getItem(SessionStorageKey.isOpen) === 'true';\n    const [isOpen, setIsOpen] = useState(localIsOpen);\n\n    const handleIsOpenSet = (value) => {\n        setIsOpen(value);\n        sessionStorage.setItem(SessionStorageKey.isOpen, String(value))\n    };\n\n    return {isOpen, handleIsOpenSet};\n}\n\nexport default useIsOpen;\n","import './style.css';\n\nconst TaskForm = ({\n  task,\n  onChange,\n  onSubmit,\n  onCancel\n}) => {\n    if (!task) {\n        return null\n    }\n\n    return (\n        <form className=\"task-form\">\n            <div className=\"task-form__item\">\n                {task.id || 'New'}\n            </div>\n            <div className=\"task-form__item\">\n                <input\n                    type=\"text\"\n                    value={task.title}\n                    onChange={(event) => onChange('title', event.target.value)}\n                />\n            </div>\n            <div className=\"task-form__item\">\n                <input\n                    type=\"checkbox\"\n                    checked={task.isCompleted}\n                    onClick={() => onChange('isCompleted', !task.isCompleted)}\n                />\n            </div>\n            <div className=\"task-form__item\">\n                <button type=\"button\" onClick={() => onSubmit(task)}>Save</button>\n                <button type=\"button\" onClick={onCancel}>Cancel</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default TaskForm;","import {useEffect, useState} from 'react';\n\nimport {SessionStorageKey} from '../constants';\n\nconst useTask = ({task: taskInit}) => {\n    const sessionTask = JSON.parse(sessionStorage.getItem(SessionStorageKey.task));\n\n    const [task, setTask] = useState(taskInit || sessionTask || {});\n\n    const handleTaskChange = (key, value) => setTask((taskOld) => {\n        console.log(key, value);\n        const taskNew = {...taskOld, [key]: value};\n\n        sessionStorage.setItem(SessionStorageKey.task, JSON.stringify(taskNew));\n\n        return taskNew;\n    })\n\n    const handleClearTask = () => {\n        sessionStorage.removeItem(SessionStorageKey.task);\n\n        setTask({});\n    }\n\n    useEffect(() => {\n        if(taskInit) {\n        setTask(taskInit)\n    }}, [taskInit]);\n\n    return {task, handleTaskChange, handleClearTask};\n}\n\nexport default useTask;","import {useCallback} from 'react';\n\nimport TaskForm from '../task-form';\nimport useTask from './use-task';\nimport './style.css';\n\nconst Modal = ({task, onCreate, onChange, onClose}) => {\n    const {task: taskEdit, handleTaskChange, handleClearTask} = useTask({task});\n\n    const handleTaskSubmit = useCallback((value) => {\n        handleClearTask();\n\n        if (value?.id) {\n            onChange?.(value);\n        } else {\n            onCreate?.(value);\n        }\n    }, [onCreate, onChange, handleClearTask]);\n\n    const handleCancel = useCallback((value) => {\n        handleClearTask();\n        onClose();\n    }, [handleClearTask, onClose]);\n\n    return (\n        <div className=\"modal\">\n            <TaskForm\n                task={taskEdit}\n                onChange={handleTaskChange}\n                onCancel={handleCancel}\n                onSubmit={handleTaskSubmit}\n            />\n        </div>\n    )\n};\n\n\nexport default Modal;\n","import {useState} from 'react';\n\nimport useTaskList from './use-task-list';\nimport TaskList from '../task-list';\nimport useIsOpen from './use-is-open';\nimport Modal from '../modal';\nimport './style.css';\n\nconst App = () => {\n    const [task, setTask] = useState({});\n    const {isOpen, handleIsOpenSet} = useIsOpen();\n    const {taskList, handleTaskAdd, handleTaskListChange, handleTaskRemove} = useTaskList();\n\n    const handleTaskNew = () => {\n        setTask({});\n        handleIsOpenSet(true);\n    };\n\n    const handleTaskEdit = (value) => {\n        setTask(value);\n        handleIsOpenSet(true);\n    };\n\n    const handleTaskCreate = (value) => {\n        handleTaskAdd(value);\n        handleIsOpenSet(false);\n    };\n\n    const handleTaskChange = (value) => {\n        handleTaskListChange(value);\n        handleIsOpenSet(false);\n    };\n\n    return (\n        <div className=\"app\">\n            <button className=\"app__add\" type=\"button\" onClick={handleTaskNew}>\n                Add\n            </button>\n            <TaskList\n                taskList={taskList}\n                onRemove={handleTaskRemove}\n                onEdit={handleTaskEdit}\n                onTaskListChange={handleTaskListChange}\n            />\n            { isOpen &&\n                <Modal\n                    task={task}\n                    onChange={handleTaskChange}\n                    onCreate={handleTaskCreate}\n                    onClose={() => handleIsOpenSet(false)}\n                />\n            }\n        </div>\n    )\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}